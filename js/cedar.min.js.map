{"version":3,"file":"cedar.min.js","sources":["../../src/cedar.js"],"names":["factory","define","amd","vg","d3","module","exports","require","window","Cedar","options","self","this","opts","width","undefined","height","_events","_definition","_defaultDefinition","_view","_methodQueue","_pendingXhr","definition","Error","getJson","err","data","_purgeMethodQueue","override","specification","dataset","query","_mixin","_defaultQuery","Object","defineProperty","get","set","val","prototype","canDraw","drawable","errs","show","_addToMethodQueue","elementId","select","_elementId","_renderer","renderer","token","_token","chk","issues","join","update","emit","_remove","compiledMappings","_applyDefaultsToMappings","mappings","inputs","queryFromSpec","JSON","parse","_supplant","stringify","spec","template","_mergeRecursive","url","values","_renderSpec","_createFeatureServiceRequest","cb","console","dir","ex","chartCtor","el","parseInt","style","_attach","opt","view","items","model","scene","forEach","item","datum","attributes","key","value","hasPropertySet","props","clearSelection","eventName","_handler","_handlers","handler","on","off","_validateMappings","input","missingInputs","i","length","required","name","push","_validateData","features","Array","isArray","firstRow","fld","_getMappingFieldName","field","hasOwnProperty","mappingName","fieldName","defn","defaultQuery","where","returnGeometry","returnDistinctValues","returnIdsOnly","returnCountOnly","outFields","f","evtName","evt","registeredHandler","type","callback","log","args","method","action","apply","json","message","source","arguments","entries","p","mergedQuery","bbox","geometry","bboxArr","split","xmin","ymin","xmax","ymax","inSR","groupByFieldsForStatistics","group","outStatistics","count","orderByFields","statisticType","onStatisticField","outStatisticFieldName","sort","_serializeQueryParams","tmpl","params","replace","a","b","r","_getTokenValue","obj1","obj2","constructor","e","tokens","tokenName","tmpTokens","tokenNameParts","str","encodeURIComponent","queryString"],"mappings":"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","sourcesContent":["/**\n * Cedar\n *\n * Generic charting / visualization library for the ArcGIS Platform\n * that leverages vega + d3 internally.\n */\n\n(function (factory) {\n  'use strict';\n  //define an AMD module that relies on 'vega'\n  if (typeof define === 'function' && define.amd) {\n    define(['vega', 'd3'], function (vg, d3) {\n      return factory(vg, d3);\n    });\n  //define a common js module that relies on 'vega'\n  } else if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory(require('vega'), require('d3'));\n  }\n\n  if (typeof window !== 'undefined' && window.vg && window.d3) {\n    window.Cedar = factory(window.vg, window.d3);\n  }\n} (function (vg, d3) {\n  'use strict';\n\n/**\n * Constructor\n * @param {object} options Cedar options\n */\nvar Cedar = function Cedar(options){\n  //close over this for use in callbacks\n  var self = this;\n\n  //ensure an opts object\n  var opts = options || {};\n\n  /**\n   * Internals for holding state\n   */\n\n  // Cedar configuration such as size\n  this.width = undefined;\n  this.height = undefined;\n\n  // Array to hold event handlers\n  this._events = [];\n\n  //initialize the internal definition hash\n  this._definition = Cedar._defaultDefinition();\n\n  //the vega view aka the chart\n  this._view = undefined;\n\n  //queue to hold methods called while\n  //xhrs are in progress\n  this._methodQueue=[];\n\n  /**\n   * Flag used to determine if the library is\n   * waiting for an xhr to return. \n   */\n  this._pendingXhr = false;\n\n  //defintion \n  if(opts.definition){\n    //is it an object or string(assumed to be url)\n    if(typeof opts.definition === 'object'){\n      //hold onto the definition\n      this._definition = opts.definition;\n    }else if(typeof opts.definition === 'string' ){ \n      //assume it's a url (relative or abs) and fetch the definition object\n      this._pendingXhr = true;\n      Cedar.getJson(opts.definition, function(err,data){\n        self._pendingXhr = false;\n        self._definition = data; \n        self._purgeMethodQueue();\n      });\n    }else{\n      throw new Error('parameter definition must be an object or string (url)');\n    }\n  }\n\n  if(opts.override) {\n    this._definition.override = opts.override;\n  }\n\n  //template\n  if(opts.specification){\n    //is it an object or string(assumed to be url)\n    if(typeof opts.specification === 'object'){\n      //hold onto the template\n      this._definition.specification = opts.specification;\n\n    }else if(typeof opts.specification === 'string' ){ \n      //assume it's a url (relative or abs) and fetch the template object\n      this._pendingXhr = true;\n      Cedar.getJson(opts.specification, function(err,data){\n        self._pendingXhr = false;\n        self._definition.specification = data; \n        self._purgeMethodQueue();\n      });\n    }else{\n      throw new Error('parameter template must be an object or string (url)');\n    }\n  }\n\n  //allow a dataset to be passed in...\n  if(opts.dataset && typeof opts.dataset === 'object'){\n    opts.dataset.query = Cedar._mixin({}, Cedar._defaultQuery(), opts.dataset.query);\n    //assign it\n    this._definition.dataset = opts.dataset;\n  }\n\n  /**\n   * Properties\n   *\n   * ES 5.1 syntax, so IE 8 & lower won't work\n   * \n   * If the val is a url, should we expect\n   * cedar to fetch the object? \n   * \n   * I'd say no... as that violates the principal \n   * of least suprise. Also - cedar has a .getJSON\n   * helper method the dev should use.\n   * \n   */\n      \n  Object.defineProperty(this, 'dataset', {\n    get: function() {\n        return this._definition.dataset;\n    },\n    set: function(val) {\n       this._definition.dataset = val;\n    }\n  });\n\n  Object.defineProperty(this, 'specification', {\n    get: function() {\n        return this._definition.specification;\n    },\n    set: function(val) {\n      this._definition.specification = val;\n    }\n  });\n\n  Object.defineProperty(this, 'override', {\n    get: function() {\n        return this._definition.override;\n    },\n    set: function(val) {\n      this._definition.override = val;\n    }\n  });  \n\n};\n\n\n/**\n * Inspect the current state of the object\n * and determine if we have sufficient information\n * to render the chart\n * @return {object} Hash of the draw state + any missing requirements\n */\nCedar.prototype.canDraw = function(){\n\n  //dataset?\n  //dataset.url || dataset.data?\n  //dataset.mappings?\n  //specification?\n  //specification.template?\n  //specification.inputs?\n  //specification.inputs ~ dataset.mappings?\n  \n  return {drawable:true, errs:[]};\n\n};\n\n/**\n * Render a chart in the specified element\n * @param  {object} options \n * \n * options.elementId [required] Id of the Dom element into which the chart will be rendered\n * options.token     [optional] Token to be used if the data or spec are on a secured server\n */\nCedar.prototype.show = function(options){\n  if(this._pendingXhr){\n    \n    this._addToMethodQueue('show', [options]);\n\n  }else{\n\n    var err;\n    //ensure we got an elementId\n    if( !options.elementId ){\n      err= \"Cedar.show requires options.elementId\";\n    }\n    //check if element exists in the page\n    if(d3.select(options.elementId)[0][0] === null){\n      err = \"Element \" + options.elementId + \" is not present in the DOM\";\n     }\n  \n    //hold onto the id\n    this._elementId = options.elementId;\n    this._renderer = options.renderer || \"canvas\"; //default to canvas\n    this.width = options.width || undefined; // if not set in API, always base on current div size\n    this.height = options.height || undefined;\n\n    //hold onto the token\n    if(options.token){\n      this._token = options.token;\n    }\n\n    if( err ){\n      throw new Error( err );\n    }\n    var chk = this.canDraw();\n    if(chk.drawable){\n      //update centralizes the spec compilation & drawing\n      this.update();  \n    }else{\n      //report the issues\n      var errs = chk.issues.join(',');\n      throw new Error('Chart can not be drawn because: ' + errs);  \n    }\n    \n  }\n};\n\n/**\n * Render the chart using the internal state\n * Should be called after a user modifies the \n * of the dataset, query, mappings or template\n */\nCedar.prototype.update = function(){\n  var self = this;\n  \n  if ( this._view ) { \n    this.emit('update-start');\n  }\n\n  if(this._pendingXhr){\n    \n    this._addToMethodQueue('update');\n\n  }else{\n\n    if(this._view){\n      //remove handlers\n      //TODO Remove existing handlers\n      this._remove(this._view);\n    }\n    try{\n      //ensure we have required inputs or defaults \n      var compiledMappings = Cedar._applyDefaultsToMappings(this._definition.dataset.mappings, this._definition.specification.inputs); //Cedar._compileMappings(this._definition.dataset, this._definition.specification.inputs);\n\n      var queryFromSpec = Cedar._mixin({}, this._definition.specification.query, this._definition.dataset.query);\n      queryFromSpec = JSON.parse(Cedar._supplant(JSON.stringify(queryFromSpec), compiledMappings));\n\n      //allow binding to query properties\n      compiledMappings.query = queryFromSpec;\n\n      //compile the template + mappings --> vega spec\n      var spec = JSON.parse(Cedar._supplant(JSON.stringify(this._definition.specification.template), compiledMappings)); \n\n      // merge in user specified style overrides\n      spec = Cedar._mergeRecursive(spec, this._definition.override);\n\n      //if the spec has a url in the data node, delete it\n      if(spec.data[0].url){\n        delete spec.data[0].url;\n      }\n\n      if(this._definition.dataset.data){\n\n        //create the data node using the passed in data\n        spec.data[0].values = this._definition.dataset.data;\n        \n        //send to vega\n        this._renderSpec(spec);\n      \n      }else{\n      \n        //we need to fetch the data so\n        var url = Cedar._createFeatureServiceRequest(this._definition.dataset, queryFromSpec);\n      \n        //create a callback closure to carry the spec\n        var cb = function(err,data){\n      \n          //todo add error handlers for xhr and ags errors\n          spec.data[0].values = data;\n          console.dir(spec);\n          //send to vega\n          self._renderSpec(spec);\n\n        };\n\n        //fetch the data from the service\n        Cedar.getJson(url, cb);\n      }\n    }\n    catch(ex){\n      throw(ex);\n    }\n  }\n};\n\n/**\n * Render a fully cooked spec\n */\nCedar.prototype._renderSpec = function(spec){\n  var self = this;\n  try{\n    //use vega to parse the spec \n    //it will handle the spec as an object or url\n    vg.parse.spec(spec, function(chartCtor) { \n\n      //create the view\n      self._view = chartCtor({\n        el: self._elementId,\n        renderer: self._renderer\n      });\n\n      \n      var width = self.width || parseInt(d3.select(self._elementId).style('width')) || 500;\n      var height = self.height || parseInt(d3.select(self._elementId).style('height')) || 500;\n\n      //render into the element\n      self._view.width(width).height(height).update(); \n\n      //attach event proxies\n      self._attach(self._view);\n\n      if ( self._view ) { \n        self.emit('update-end');\n      }\n\n    });\n  }\n  catch(ex){\n    throw(ex);\n  }\n};\n\n/**\n * highlight marker based on attribute value\n */\nCedar.prototype.select = function( opt ) {\n  var self = this;\n  var view = this._view;\n  var items = view.model().scene().items[0].items[0].items;\n\n  items.forEach(function(item) {\n    if ( item.datum.data.attributes[opt.key] === opt.value ) {\n      if ( item.hasPropertySet(\"hover\") ) {\n        self._view.update({props:\"hover\", items:item});\n      }\n    }\n  });\n\n};\n\n\n/**\n * highlight marker based on attribute value\n */\nCedar.prototype.clearSelection = function( opt ) {\n  var self = this;\n  var view = this._view;\n  var items = view.model().scene().items[0].items[0].items;\n\n  if ( opt && opt.key ) {\n    items.forEach(function(item) {\n      if ( item.datum.data.attributes[opt.key] === opt.value ) {\n        self._view.update({props:\"update\", items:item});\n      }\n    });\n  } else {\n    //clear all \n    self._view.update();\n  }\n\n};\n\n\n// trigger callback \nCedar.prototype.emit = function(eventName) {\n  if (this._view._handler._handlers[ eventName ] && this._view._handler._handlers[ eventName ][0] !== undefined){\n    this._view._handler._handlers[ eventName ][0].handler();\n  }\n};\n\n/**\n * Attach the generic proxy handlers to the chart view\n */\nCedar.prototype._attach = function(view){\n  \n  view.on('mouseover', this._handler('mouseover'));\n  view.on('mouseout', this._handler('mouseout'));\n  view.on('click', this._handler(\"click\"));\n  view.on('update-start', this._handler('update-start'));\n  view.on('update-end', this._handler('update-end'));\n  \n};\n\n/**\n * Remove all event handlers from the view\n */\nCedar.prototype._remove = function(view){\n\n  view.off('mouseover');\n  view.off('mouseout');\n  view.off('click');\n  view.off('update-start');\n  view.off('update-end');\n  \n};\n\n/**\n * Helper function that validates that the \n * mappings hash contains values for all\n * the inputs\n * @param  {array} inputs   Array of inputs\n * @param  {object} mappings Hash of mappings\n * @return {array}          Missing mappings\n */\nCedar._validateMappings = function(inputs, mappings){\n  var missingInputs = [], input;\n  for(var i=0;i<inputs.length;i++){\n    input = inputs[i];\n    if(input.required){\n      if(!mappings[input.name]){\n        missingInputs.push(input.name);\n      }\n    }\n  }\n  return missingInputs;\n};\n\n/**\n * Validate that the incoming data has the fields expected\n * in the mappings\n */\nCedar._validateData = function(data, mappings){\n  var missingInputs = [];\n  if(!data.features || !Array.isArray(data.features)){\n    throw new Error('Data is expected to have features array!');\n  }\n  var firstRow = data.features[0].attributes;\n  for(var key in mappings){\n    var fld = Cedar._getMappingFieldName(key, mappings[key].field);\n    if(!firstRow.hasOwnProperty(fld)){\n      missingInputs.push(fld);\n    }\n  }\n  return missingInputs;\n};\n\n/**\n * Centralize and abstract the computation of\n * expected field names, based on the mapping name\n */\nCedar._getMappingFieldName = function(mappingName, fieldName){\n  var name = fieldName;\n  //if(mappingName.toLowerCase() === 'count'){\n  //  name = fieldName + '_SUM';\n  //}\n  return name;\n};\n\n/**\n * Return a default definition object\n */\nCedar._defaultDefinition = function(){\n  var defn = {\n    \"dataset\": {\n      \"query\": this._defaultQuery()\n    },\n    \"template\":{}\n  };\n\n  defn.dataset.query = Cedar._defaultQuery();\n\n  return defn;\n};\n\n/**\n * Default Query Object\n */\nCedar._defaultQuery = function(){\n  var defaultQuery = {\n    \"where\": \"1=1\",\n    \"returnGeometry\": false,\n    \"returnDistinctValues\": false,\n    \"returnIdsOnly\": false,\n    \"returnCountOnly\": false,\n    \"outFields\": \"*\",\n    \"f\": \"json\"\n  };\n  return defaultQuery;\n};\n\n\n\n/**\n * Generic event handler proxy\n */\nCedar.prototype._handler = function(evtName) {\n  var self = this;\n  \n  //return a handler function w/ the events hash closed over\n  var handler = function(evt, item){\n    self._events.forEach( function(registeredHandler){\n      if(registeredHandler.type === evtName){\n        //invoke the callback with the data\n        if ( item ) {\n          registeredHandler.callback(evt, item.datum.data.attributes);\n        } else {\n          registeredHandler.callback(evt,null);\n        }\n      }\n    });\n  };\n  return handler;\n};\n\n/**\n * Add a handler for the named event\n */\nCedar.prototype.on = function(evtName, callback){\n  this._events.push({\"type\":evtName, \"callback\":callback});\n};\n\n/**\n * Remove a handler for the named event\n */\nCedar.prototype.off = function(evtName /*, callback */){\n  console.log('Handler for ' + evtName +' removed...');\n};\n\n\n/**\n * Creates an entry in the method queue, excuted \n * once a pending xhr is completed \n */\nCedar.prototype._addToMethodQueue = function(name, args){\n  this._methodQueue.push({ method: name, args: args });\n};\n\n/**\n * empties the method queue by calling the queued methods\n * This helps build a more syncronous api, while still\n * doing async things in the code\n */\nCedar.prototype._purgeMethodQueue = function(){\n  var self = this;\n  if(self._methodQueue.length > 0){\n\n    for(var i=0;i<self._methodQueue.length;i++){\n      var action = self._methodQueue[i];\n      self[action.method].apply(self, action.args);  \n    }\n  }\n};\n\n/**\n * fetch json from a url\n * @param  {string}   url      Url to json file\n * @param  {Function} callback node-style callback function (err, data)\n */\nCedar.getJson = function( url, callback ){\n  d3.json(url, function(err,data) {\n    if(err){\n      callback('Error loading ' + url + ' ' + err.message);\n    }\n    callback(null, data);\n  });\n};\n\n\nCedar._mixin = function(source) {\n    for (var i = 1; i < arguments.length; i++) {\n        d3.entries(arguments[i]).forEach(function(p) {\n            source[p.key] = p.value;\n        });\n    }\n    return source;\n};\n\n/**\n * Given a dataset hash, create the feature service\n * query string\n */\nCedar._createFeatureServiceRequest = function( dataset, queryFromSpec ) {\n  var mergedQuery = Cedar._mixin({}, Cedar._defaultQuery(), queryFromSpec);\n\n  //Handle bbox\n  if(mergedQuery.bbox){\n    //make sure a geometry was not also passed in\n    if(mergedQuery.geometry){\n      throw new Error('Dataset.query can not have both a geometry and a bbox specified');\n    }\n    //get the bbox (W,S,E,N)\n    var bboxArr = mergedQuery.bbox.split(',');\n\n    //remove it so it's not serialized as-is\n    delete mergedQuery.bbox;\n\n    //cook it into a json string \n    mergedQuery.geometry = JSON.stringify({\"xmin\": bboxArr[0], \"ymin\": bboxArr[2],\"xmax\": bboxArr[1], \"ymax\": bboxArr[3] });\n    //set the spatial ref as geographic\n    mergedQuery.inSR = '4326';\n  }\n  if(!mergedQuery.groupByFieldsForStatistics && dataset.mappings.group) {\n      mergedQuery.groupByFieldsForStatistics = dataset.mappings.group.field;\n  }\n  if(!mergedQuery.outStatistics && dataset.mappings.count) {\n    mergedQuery.orderByFields = dataset.mappings.count.field + \"_SUM\";\n    mergedQuery.outStatistics = JSON.stringify([{\"statisticType\": \"sum\", \"onStatisticField\": dataset.mappings.count.field, \"outStatisticFieldName\": dataset.mappings.count.field + \"_SUM\"}]);\n  }\n\n\n\n  //iterate the mappings keys to check for sort\n  //-----------------------------------------------------------------\n  //This approach would seem 'clean' but if there are multiple fields\n  //to sort by, the order would be determined by how javascript decides to\n  //iterate the mappings property hash.\n  //Thus, using mappings.sort gives the developer explicit control\n  //-----------------------------------------------------------------\n  // var sort = [];\n  // for (var property in dataset.mappings) {\n  //   if (dataset.mappings.hasOwnProperty(property)) {\n  //     if(dataset.mappings[property].sort){\n  //       //ok - build up the sort\n  //       sort.push(dataset.mappings[property].field + ' ' + dataset.mappings[property].sort);\n  //     }\n  //   }\n  // }\n  // if(sort.length > 0){\n  //   mergedQuery.orderByFields = sort.join(',');\n  // }\n  //-----------------------------------------------------------------\n  //check for a sort passed directly in\n  if(dataset.mappings.sort){\n    mergedQuery.orderByFields = dataset.mappings.sort;\n  }\n\n  var url = dataset.url + \"/query?\" + this._serializeQueryParams(mergedQuery);\n  \n  if(dataset.token){\n    url = url + '&token=' + dataset.token;\n  }\n  \n  return url;\n};\n\nCedar._applyDefaultsToMappings = function(mappings, inputs){\n  var errs = [];\n  //loop over the inputs\n  for(var i =0; i < inputs.length; i++){\n    //get the input\n    var input = inputs[i];\n\n    //if it's required and not in the mappings, add an exception\n    if(input.required && !mappings[input.name] ){\n      errs.push(input.name);\n    }\n    \n    //if it's not required, has a default and not in the mappings\n    if(!input.required && !mappings[input.name] && input.default){\n      //add the default\n      mappings[input.name] = input.default;\n    }\n  }\n\n  if(errs.length > 0){\n    throw new Error('Required Mappings Missing: ' + errs.join(','));\n  }else{\n    return mappings;\n  }\n};\n\n\n/**\n * Token Replacement on a string\n * @param  {string} template string template\n * @param  {object} params   object hash that maps to the tokens to be replaced\n * @return {string}          string with values replaced\n */\nCedar._supplant = function( tmpl, params ){\n  return tmpl.replace(/{([^{}]*)}/g,\n    function (a, b) {\n      var r = Cedar._getTokenValue(params, b);\n      return typeof r === 'string' || typeof r === 'number' ? r : a;\n    }\n  );\n};\n\n/*\n* Recursively merge properties of two objects \n*/\nCedar._mergeRecursive = function(obj1, obj2) {\n  for (var p in obj2) {\n    try {\n      // Property in destination object set; update its value.\n      if ( obj2[p].constructor===Object || obj2[p].constructor===Array) {\n        obj1[p] = Cedar._mergeRecursive(obj1[p], obj2[p]);\n\n      } else {\n        obj1[p] = obj2[p];\n\n      }\n\n    } catch(e) {\n      // Property in destination object not set; create it and set its value.\n      obj1[p] = obj2[p];\n\n    }\n  }\n\n  return obj1;\n};\n\n/**\n * Get the value of a token from a hash\n * @param  {[type]} tokens    [description]\n * @param  {[type]} tokenName [description]\n * @return {[type]}           [description]\n * Pulled from gulp-token-replace (MIT license)\n * https://github.com/Pictela/gulp-token-replace/blob/master/index.js\n * \n */\nCedar._getTokenValue = function(tokens, tokenName) {\n  var tmpTokens = tokens;\n  var tokenNameParts = tokenName.split('.');\n  for (var i = 0; i < tokenNameParts.length; i++) {\n    if (tmpTokens.hasOwnProperty(tokenNameParts[i])) {\n      tmpTokens = tmpTokens[tokenNameParts[i]];\n    } else {\n      return null;\n    }\n  }\n  return tmpTokens;\n};\n\n/**\n * Serilize an object into a query string\n * @param  {object} params Params for the query string\n * @return {string}        query string\n */\nCedar._serializeQueryParams = function(params) {\n  var str = [];\n  for(var p in params){\n    if (params.hasOwnProperty(p)) {\n      var val = params[p];\n      if (typeof val !== \"string\") {\n          val = JSON.stringify(val);\n      }\n      str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(val));\n    }\n  }\n  var queryString = str.join(\"&\");\n  return queryString;\n};\n\n  return Cedar;\n}));\n"]}